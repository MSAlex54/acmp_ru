//Домашнее задание
//(Время: 1 сек. Память: 16 Мб Сложность: 27%)
//Петя успевает по математике лучше всех в классе, поэтому учитель задал ему сложное домашнее задание, в котором нужно
// в заданном наборе целых чисел найти сумму всех положительных элементов, затем найти где в заданной последовательности находятся максимальный и минимальный элемент
// и вычислить произведение чисел, расположенных в этой последовательности между ними.
// Так же известно, что минимальный и максимальный элемент встречаются в заданном множестве чисел только один раз и не являются соседними.
// Поскольку задач такого рода учитель дал Пете около ста, то Петя как сильный программист смог написать программу,
// которая по заданному набору чисел самостоятельно находит решение. А Вам слабо?
//
//Входные данные
//В первой строке входного файла INPUT.TXT записано единственное число N – количество элементов массива.
// Вторая строка содержит N целых чисел, представляющих заданный массив. Все элементы массива разделены пробелом.
// Каждое из чисел во входном файле, в том числе и N, не превышает 10^2 по абсолютной величине.
//
//Выходные данные
//В единственную строку выходного файла OUTPUT.TXT нужно вывести два числа, разделенных пробелом: сумму положительных элементов и произведение чисел,
// расположенных между минимальным и максимальным элементами. Значения суммы и произведения не превышают по модулю 3*10^4.
import java.util.*;
public class ID_0009 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int res = 0;
        int [] n = new int[a];
        int [] ind = new int[4];
        for (int i = 0; i <a ; i++) {
            n[i] = sc.nextInt();
            res += Math.max(n[i], 0);
            if (i==0){
                ind[0] = n[i];
                ind[1] = n[i];
                ind[2] = i;
                ind[3] = i;
            } else {
                if (n[i] < ind [0]){
                    ind[0] = n[i];
                    ind[2] = i;
                }
                if (n[i] > ind [1]){
                    ind[1] = n[i];
                    ind[3] = i;
                }
            }
        }
        int start = (Math.min(ind[2], ind[3]))+1;
        int finish = (Math.max(ind[2], ind[3]))-1;
        int resD= 1;
        for (int i = start; i <=finish ; i++) {
            resD *= n[i];
        }
        System.out.println(res + " " + resD);
    }
}