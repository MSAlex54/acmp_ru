//Волосатый бизнес
//Одного неформала выгнали с работы, и теперь ему надо как-то зарабатывать себе на жизнь. Поразмыслив, он решил, что сможет иметь очень неплохие деньги на продаже собственных волос. Известно, что пункты приема покупают волосы произвольной длины стоимостью С у.е. за каждый сантиметр. Так как волосяной рынок является очень динамичным, то цена одного сантиметра волос меняется каждый день как и курс валют. Неформал является очень хорошим бизнес-аналитиком. Он смог вычислить, какой будет цена одного сантиметра волос в каждый из ближайших N дней (для удобства пронумеруем дни в хронологическом порядке от 0 до N-1). Теперь он хочет определить, в какие из этих дней ему следует продавать волосы, чтобы по истечению всех N дней заработать максимальное количество денег. Заметим, что волосы у неформала растут только ночью и вырастают на 1 сантиметр за ночь. Следует также учесть, что до 0-го дня неформал с горя подстригся наголо и к 0-му дню длина его волос составляла 1 сантиметр.
//
//Входные данные
//В первой строке входного файла INPUT.TXT записано целое число N (0 < N ≤ 100). Во второй строке через пробел заданы N натуральных чисел, не превосходящих 100, соответствующие стоимости C[i] 1 сантиметра волос за каждый i-й день.
//
//Выходные данные
//В единственную строку выходного файла OUTPUT.TXT нужно вывести максимальную денежную сумму, которую может заработать неформал за N дней.
import java.io.*;
import java.util.Arrays;

public class ID_0039 {
    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(reader.readLine());
        int res = 0;
        int sm = 0;
        int[] val = Arrays.stream(reader.readLine().split("\\s")).mapToInt(Integer::parseInt).toArray();
         for (int i = 0; i < N ; i++) {
            int max = val[i];
            int privDay = i;
            sm++;
            for (int j = i+1; j < N ; j++) {
                if (val[j] >= max){
                    max = val[j];
                    sm = j+1-privDay;
                    i = j;
                }
            }
            res += max*sm;
            sm = 0;
        }
        System.out.println(res);
    }
}